/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export function hash(left: HashObject, right: HashObject): HashObject
export function hash64(left: HashObject, right: HashObject): HashObject
export function hashtreeOne(left: HashObject, right: HashObject): HashObject
export function hashtree(objects: HashObject[]): HashObject[]
export function hashtreeUint8Array(input: Uint8Array): Uint8Array
export function initHashObjectCache(n: number): void
export class HashObject {
  constructor(h0: number, h1: number, h2: number, h3: number, h4: number, h5: number, h6: number, h7: number)
  static zero(): HashObject
  static fromUint8Array(bytes: Uint8Array): HashObject
  get h0(): number
  get h1(): number
  get h2(): number
  get h3(): number
  get h4(): number
  get h5(): number
  get h6(): number
  get h7(): number
  set h0(value: number)
  set h1(value: number)
  set h2(value: number)
  set h3(value: number)
  set h4(value: number)
  set h5(value: number)
  set h6(value: number)
  set h7(value: number)
  applyHash(other: HashObject): void
  applyUint8Array(bytes: Uint8Array): void
  toUint8Array(): Uint8Array
  asBytes(): number[]
}
